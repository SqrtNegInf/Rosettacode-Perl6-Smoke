#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chaocipher
#c# 2018-04-26 <RC, 2018-08-28 <RC
#m# MOAR: OK
#j# JVM:  OK

# Works with: Rakudo version 2018.03

my @left;
my @right;

sub reset {
    @left  = <HXUCZVAMDSLKPEFJRIGTWOBNYQ>.comb;
    @right = <PTLNBQDEOYSFAVZKGJRIHWXUMC>.comb;
}
 
sub encode ($letter) {
    my $index = (@right.grep: $letter.uc, :k)[0];
    my $enc   = @left[$index];
    left-permute(@left, $index);
    right-permute(@right, $index);
    $enc
}
 
sub decode ($letter) {
    my $index = (@left.grep: $letter.uc, :k)[0];
    my $dec   = @right[$index];
    left-permute(@left, $index);
    right-permute(@right, $index);
    $dec
}
 
sub right-permute (@right, $index) {
    @right.=rotate: $index + 1;
    @right[2..13].=rotate
}
 
sub left-permute (@left, $index) {
    @left.=rotate: $index;
    @left[1..13].=rotate
}
 
my @res;
reset; @res.push: 'WELLDONEISBETTERTHANWELLSAID'.comb».&encode.join;
reset; @res.push: 'OAHQHCNYNXTSZJRRHJBYHQKSOUJY'.comb».&decode.join;
.say for @res;

my $ref = qq:to/END/;
OAHQHCNYNXTSZJRRHJBYHQKSOUJY
WELLDONEISBETTERTHANWELLSAID
END

use Test;
is @res.join("\n"), chomp $ref;
