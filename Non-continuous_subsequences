#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Non-continuous_subsequences
#c# 2016-06-04 <RC, 2017-07-31 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# old version fails 07/30: Rakudo version 2017.07-97-ga256c26d8 built on MoarVM version 2017.07-266-ged84a6329
#n# previously was allowing nonense range (0..-1) on array

# Works with: rakudo version 2015-09-24

sub non_continuous_subsequences ( *@list ) {
    @list.combinations(2..+@list).grep: { 1 != all( .[ 0 ^.. .end] Z- .[0 ..^ .end] ) } # DH change 
    #@list.combinations.grep: { 1 != all( .[ 0 ^.. .end] Z- .[0 ..^ .end] ) }
}
 
say my $r1 = non_continuous_subsequences( 1..3 ); # DH change - no .gist needed
say my $r2 = non_continuous_subsequences( 1..4 ); # DH change - no .gist needed
say my $r3 = non_continuous_subsequences(   ^4 ).map: {[<a b c d>[.list]]}; # DH change - no .gist needed

use Test;
is $r1.gist, '((1 3))';
is $r2.gist, '((1 3) (1 4) (2 4) (1 2 4) (1 3 4))';
is $r3.gist, '([a c] [a d] [b d] [a b d] [a c d])';
