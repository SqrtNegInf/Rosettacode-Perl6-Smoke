#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loop_over_multiple_arrays_simultaneously
#c# 2015-10-27 <RC
#m# MOAR: OK
#j#  JVM: OK

my @res;
# Works with: niecza version 2011.07
for <a b c> Z <A B C> Z 1, 2, 3 -> $x, $y, $z {
   @res.push: $x, $y, $z;
}

#The Z operator stops emitting items as soon as the shortest input list is exhausted. However, short lists are easily extended by replicating all or part of the list, or by appending any kind of lazy list generator to supply default values as necessary.
#Note that we can also factor out the concatenation by making the Z metaoperator apply the ~ concatenation operator across each triple:

@res.push: $_ for <a b c> Z~ <A B C> Z~ 1, 2, 3;

#We could also use the zip-to-string with the reduction metaoperator:

@res.push: $_ for [Z~] [<a b c>], [<A B C>], [1,2,3];

.say for @res;

my $ref = qq:to/END/;
a A 1
b B 2
c C 3
aA1
bB2
cC3
aA1
bB2
cC3
END

use Test;
is @res.join("\n"), chomp $ref;
