#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Dice_game_probabilities
#c# 2018-03-20 <RC, 2018-03-23 >RC, 2020-08-25 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2018-07-31 significant digits default changed?
#n# .raku simpler than .nude.join('/')

sub likelihoods ($roll) {
    my ($dice, $faces) = $roll.comb(/\d+/);
    my @counts;
    @counts[$_]++ for [X+] |(1..$faces,) xx $dice; 
    return [@counts[]:p], $faces ** $dice;
}

sub beating-probability ([$roll1, $roll2]) {
    my (@c1, $p1) := likelihoods $roll1;
    my (@c2, $p2) := likelihoods $roll2;
    my $p12 = $p1 × $p2;

    [+] gather for flat @c1 X @c2 -> $p, $q {
	take $p.value × $q.value / $p12 if $p.key > $q.key;
    }
}

# We're using standard DnD notation for dice rolls here.
my @res;
@res.push: .gist~ "\t"~ .raku given beating-probability < 9d4 6d6 >;
@res.push: .gist~ "\t"~ .raku given beating-probability < 5d10 6d7 >;
.say for @res;

my $ref = qq:to/END/;
0.573144077	<48679795/84934656>
0.64278862872	<3781171969/5882450000>
END

my $refx = qq:to/END/;
0.57314407678	<48679795/84934656>
0.642788628718	<3781171969/5882450000>
END

use Test;
is @res.join("\n"), chomp $ref;
