#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Determine_if_a_string_has_all_the_same_characters
#c# 2019-10-30 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM: NFC not yet implemented. Sorry.

my @res;

# The last string demonstrates how Perl 6 can recognize that glyphs made up of different combinations of combining characters can compare the same. It is built up from explicit codepoints to show that each of the glyphs is made up of different combinations.

  -> $str {
    @res.push: "\n{$str.perl} (length: {$str.chars}), has ";
    my $match = $str.match( / (.) /, :g );
    my %m;
    $match.list.map( { %m{.values.Str}.push: .pos } ) if $match;

    if %m > 1 {
        @res[*-1] ~= "different characters:";
        @res.push: "'{.key}' ({.key.uninames}; hex ordinal: {(.key.ords).fmt: "0x%X"})" ~
        " in positions: {.value.sort.squish.join: ', '}" for %m.sort( *.value[0] );
    } else {
        @res[*-1] ~= "the same character in all positions."
    }

} for
    '',
    '   ',
    '2',
    '333',
    '.55',
    'tttTTT',
    '4444 444k',
    'ðŸ‡¬ðŸ‡§ðŸ‡¬ðŸ‡§ðŸ‡¬ðŸ‡§ðŸ‡¬ðŸ‡§',
    "\c[LATIN CAPITAL LETTER A]\c[COMBINING DIAERESIS]\c[COMBINING MACRON]" ~
    "\c[LATIN CAPITAL LETTER A WITH DIAERESIS]\c[COMBINING MACRON]" ~
    "\c[LATIN CAPITAL LETTER A WITH DIAERESIS AND MACRON]";

.say for @res;

my $ref = q:to/END/;

"" (length: 0), has the same character in all positions.

"   " (length: 3), has the same character in all positions.

"2" (length: 1), has the same character in all positions.

"333" (length: 3), has the same character in all positions.

".55" (length: 3), has different characters:
'.' (FULL STOP; hex ordinal: 0x2E) in positions: 1
'5' (DIGIT FIVE; hex ordinal: 0x35) in positions: 2, 3

"tttTTT" (length: 6), has different characters:
't' (LATIN SMALL LETTER T; hex ordinal: 0x74) in positions: 1, 2, 3
'T' (LATIN CAPITAL LETTER T; hex ordinal: 0x54) in positions: 4, 5, 6

"4444 444k" (length: 9), has different characters:
'4' (DIGIT FOUR; hex ordinal: 0x34) in positions: 1, 2, 3, 4, 6, 7, 8
' ' (SPACE; hex ordinal: 0x20) in positions: 5
'k' (LATIN SMALL LETTER K; hex ordinal: 0x6B) in positions: 9

"ðŸ‡¬ðŸ‡§ðŸ‡¬ðŸ‡§ðŸ‡¬ðŸ‡§ðŸ‡¬ðŸ‡§" (length: 4), has the same character in all positions.

"ÇžÇžÇž" (length: 3), has the same character in all positions.
END

use Test;
is @res.join("\n"), chomp $ref;
