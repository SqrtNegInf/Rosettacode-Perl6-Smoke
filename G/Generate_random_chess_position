#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Generate_random_chess_position
#c# 2016-01-27 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-11-03 results changed with: Rakudo(tm) v2020.10-51-g53b558fe0
#n# 2020-11-07 but once in a while flips back to old result apparently... (v2020.10-55-g2fe6420e8)

srand 123456;

sub pick-FEN {
    # First we chose how many pieces to place
    my $n = (2..32).pick;

    # Then we pick $n squares
    my @n = (^64).pick($n);

    # We try to find suitable king positions on non-adjacent squares.
    # If we could not find any, we return recursively
    return pick-FEN() unless
    my @kings[2] = first -> [$a, $b] {
        $a !== $b && abs($a div 8 - $b div 8) | abs($a mod 8 - $b mod 8) > 1
    }, (@n X @n);

    # We make a list of pieces we can pick (apart from the kings)
    my @pieces = <p P n N b B r R q Q>;

    # We make a list of two king symbols to pick randomly a black or white king
    my @k = <K k>.pick(*);

    return (gather for ^64 -> $sq {
        if $sq == @kings.any { take @k.shift }
        elsif $sq == @n.any {
            my $row = 7 - $sq div 8;
            take
            $row == 7 ?? @pieces.grep(none('P')).pick !!
            $row == 0 ?? @pieces.grep(none('p')).pick !!
            @pieces.pick;
        }
        else { take 'ø' }
    }).rotor(8)».join».subst(/ø+/,{ .chars }, :g).join('/') ~ ' w - - 0 1';
}

say my $result = pick-FEN();

use Test;
is $result, $*VM ~~ /jvm/ ?? '8/5k2/1Q1K4/2qn4/1P6/8/7p/q5B1 w - - 0 1' !! '2n5/8/8/1k6/8/8/3K4/8 w - - 0 1';
# 8/1n6/3qq3/4K1bB/p7/5Q2/b1p2R2/1kr2N1r w - - 0 1
# 8/1R6/3qn3/4K1qq/b7/5B2/p1Q2b2/1kn2P1r w - - 0 1
