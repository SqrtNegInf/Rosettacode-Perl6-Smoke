#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/with_multiple_ranges
#c# 2018-09-14 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# alternate method to generate $j; being very literal-minded here...
#n# .Seq issues: chose to use @j not $j, skip 'cache' (xref -1 version)
#n# Thundergnat merged this into one sequence on RC

my \x     =  5;
my \y     = -5;
my \z     = -2;
my \one   =  1;
my \three =  3;
my \seven =  7;

sub infix:<to> { $^a...$^b }
sub infix:<by> { $^a[0,$^b.abs ... *] }

my @j = flat
        -three  to       3**3  by  three ,
        -seven  to      seven  by      x ,
           555  to   (550 - y)           , 
            22  to        -28  by -three ,
          1927  to       1939            ,
          #1927  to       1939  by    one , # works too...
             x  to          y  by      z ,
         11**x  to (11**x+one);

say 'sum ' ~ my $sum = [+] @j».abs;
say 'product ' ~ my $prod = ([\×] @j.grep: so *).first: *.abs > 2**27;

use Test;
is $sum, 348173;
is $prod, -793618560;
