#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Latin_Squares_in_reduced_form
#t# inprogress
#c# 2019-12-xx >RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

my @res;

sub derangements(@l) { @l.permutations.grep(-> @p { none(@p Zeqv @l) }) }

#((2 1 4 3) (2 3 4 1) (2 4 1 3) (3 1 4 2) (3 4 1 2) (3 4 2 1) (4 1 2 3) (4 3 1 2) (4 3 2 1))
@res.push: 'derangements([1, 2, 3, 4])';

#say derangements([1, 2, 3, 4]).categorize: { .[0] }; # diff is what?

say derangements([1, 2, 3, 4]).classify: { .[0] };

# good
say my @foo = [Z+] (<1 2 3 4>, <2 1 4 3>, <3 4 1 2>, <4 3 2 1>);
say [==] @foo;
say '--';

# bad
say [Z+] (<1 2 3 4>, <2 1 4 3>, <3 4 1 2>, <4 3 1 2>);
say [==] [Z+] (<1 2 3 4>, <2 1 4 3>, <3 4 1 2>, <4 3 1 2>);

exit;
.say for @res;

my $ref = q:to/END/;
1 2 3 4
2 1 4 3
3 4 1 2
4 3 2 1

1 2 3 4
2 1 4 3
3 4 2 1
4 3 1 2

1 2 3 4
2 3 4 1
3 4 1 2
4 1 2 3

1 2 3 4
2 4 1 3
3 1 4 2
4 3 2 1

END

use Test;
is @res.join("\n"), chomp $ref;
