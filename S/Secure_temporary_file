#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Secure_temporary_file
#c# 2017-10-23 <RC
#m# MOAR: OK
#j# JVM:  OK

# Works with: Rakudo version 2017.09
# This is something best done with a module which is heavily tested, tries to account for all corner cases and automatically cleans up after itself.
# Almost verbatim from the synopsis:

use File::Temp;

# Generate a temp file in a temp dir
my ($filename0,$filehandle0) = tempfile;

# specify a template for the filename
#  * are replaced with random characters
my ($filename1,$filehandle1) = tempfile("******");

# Automatically unlink files at DESTROY (this is the default)
my ($filename2,$filehandle2) = tempfile("******", :unlink);

# Specify the directory where the tempfile will be created
my ($filename3,$filehandle3) = tempfile(:tempdir("./tmp"));

# don't unlink this one
my ($filename4,$filehandle4) = tempfile(:tempdir('./tmp') :prefix(DateTime.now.yyyy-mm-dd ~ ':'), :!unlink);

# specify a prefix, a suffix, or both for the filename
my ($filename5,$filehandle5) = tempfile(:prefix('foo'), :suffix(".txt"));

use Test;
ok $filename1.so and $filename2.so;
ok $filename0.IO ~~ :e and $filename3.IO ~~ :e;
ok $filename5.IO ~~ /^^ '/tmp/foo' .* 'txt' $$/;
