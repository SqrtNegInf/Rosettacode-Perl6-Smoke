#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Singly-linked_list/Element_removal
#c# 2018-11-14 <RC
#m# MOAR: OK
#j# JVM:  OK

my @res;

class Cell {
    has      $.value is rw;
    has Cell $.next  is rw;

    # ...convenience methods here...

# Extending class Cell from Singly-linked_list/Element_definition#Perl_6:

    method delete ($value --> Cell) {
        my $prev = Nil;
        my $cell = self;
        my $new-head = self;

        while $cell {
            my $next = $cell.next;
            if $cell.value == $value {
                $prev.next = $next if $prev;
                $cell.next = Nil;
                $new-head = $next if $cell === $new-head;
            }
            else {
                $prev = $cell;
            }
            $cell = $next;
        }

        return $new-head;
    }
}

sub cons ($value, $next) { Cell.new(:$value, :$next) }

my $list = cons 10, (cons 20, (cons 10, (cons 30, Nil)));
@res.push: $list.perl;

$list = $list.delete(10);
@res.push: $list.perl;

.say for @res;

my $ref = q:to/END/;
Cell.new(value => 10, next => Cell.new(value => 20, next => Cell.new(value => 10, next => Cell.new(value => 30, next => Cell))))
Cell.new(value => 20, next => Cell.new(value => 30, next => Cell))
END

use Test;
is @res.join("\n"), chomp $ref;
