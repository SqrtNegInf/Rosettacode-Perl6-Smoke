#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Seven-sided_dice_from_five-sided_dice
#c# 2015-10-26 <RC, 2018-04-08 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# could switch back to 1_000_000 iterations, fast enough now

srand 123456;

my $d5 = 1..5;
sub d5() { $d5.roll; }  # 1d5

sub d7() {
    my $flat = 21;
    $flat = 5 × d5() - d5() until $flat < 21;
    $flat % 7 + 1;
}

my @dist;
my $n = 100_000;
#my $n = 1_000_000; # results not stable (and verrrry slow for JVM)
my $expect = $n / 7;

loop ($_ = $n; $n; --$n) { @dist[d7()]++; }

my @res.push: "Expect " ~ $expect.fmt("%.3f");
for @dist.kv -> $i, $v {
    @res.push: "$i $v " ~ (($v - $expect)/$expect×100).fmt("%+.2f%%") if $v;
}

.say for @res;

my $moar = qq:to/END/;
Expect 14285.714
1 14385 +0.70%
2 14204 -0.57%
3 14223 -0.44%
4 14134 -1.06%
5 14343 +0.40%
6 14437 +1.06%
7 14274 -0.08%
END

my $jvm = qq:to/END/;
Expect 14285.714
1 14247 -0.27%
2 14190 -0.67%
3 14082 -1.43%
4 14352 +0.46%
5 14261 -0.17%
6 14430 +1.01%
7 14438 +1.07%
END

use Test;
my $ref = $*VM ~~ /jvm/ ?? $jvm !! $moar;
is @res.join("\n"), chomp $ref;
