#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Average_loop_length
#c# 2016-05-09 <>RC
#t# skiptest
#m# MOAR: OK
#j#  JVM: OK
#n# with 2018.04: hash key order variable
#n# 'random' output changed on 2017-08-10

srand 123456;

constant MAX_N  = 20;
constant TRIALS = 100;

#`{{
for 1..6 -> $N {
    say random-mapping($N);
    say find-loop(random-mapping($N)); #.elems;
    say '-->' ~ TRIALS R/ [+] find-loop(random-mapping($N)).elems xx TRIALS;
}
exit;
}}

my @res;
for 1 .. MAX_N -> $N {
    my $empiric = TRIALS R/ [+] find-loop(random-mapping($N)).elems xx TRIALS;
    my $theoric = [+] map -> $k { $N ** ($k + 1) R/ [*] flat $k**2, $N - $k + 1 .. $N }, 1 .. $N;
 
    FIRST say " N    empiric      theoric      (error)";
    FIRST say "===  =========  ============  =========";
 
    @res.push: sprintf "%3d  %9.4f  %12.4f    (%4.2f%%)",
            $N,  $empiric,
                        $theoric, 100 * abs($theoric - $empiric) / $theoric;
}
.say for @res; 
 
sub random-mapping {
    hash .list Z=> .roll(^$^size) given (^$^size)
}

sub find-loop { 0, | %^mapping{*} ...^ { (%){$_}++ } }

# {0 => 2, 1 => 5, 2 => 4, 3 => 3, 4 => 3, 5 => 0}
# (0 4 2 1 3)

my $ref = qq:to/END/;
  1     1.0000        1.0000    (0.00%)
  2     1.4500        1.5000    (3.33%)
  3     1.9200        1.8889    (1.65%)
  4     2.3800        2.2188    (7.27%)
  5     2.5600        2.5104    (1.98%)
  6     2.6800        2.7747    (3.41%)
  7     2.9500        3.0181    (2.26%)
  8     3.2900        3.2450    (1.39%)
  9     3.4600        3.4583    (0.05%)
 10     3.4000        3.6602    (7.11%)
 11     3.9900        3.8524    (3.57%)
 12     4.1400        4.0361    (2.57%)
 13     4.0300        4.2123    (4.33%)
 14     4.3300        4.3820    (1.19%)
 15     4.7700        4.5458    (4.93%)
 16     4.3700        4.7043    (7.11%)
 17     5.2700        4.8579    (8.48%)
 18     5.0000        5.0071    (0.14%)
 19     5.0700        5.1522    (1.60%)
 20     5.2800        5.2936    (0.26%)
END

use Test;
#is @res.join("\n"), chomp $ref;
