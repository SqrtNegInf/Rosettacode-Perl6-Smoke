#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Julia_set
#c# 2016-03-25 <RC, 2018-09-26 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: julia-set-perl6.png
#n# running time is no longer an issue!

BEGIN { die 'ecosystem...' if $*VM ~~ /jvm/; }  # wait for zef-j

#    20161123: 2197.322u 29.497s 38:13.94 97.0%
#    20170123: 1768.681u 13.116s 29:48.37 99.6%
#    20171027: 1539.655u  5.305s 25:46.18 99.9%
#    20180926:  165.140u 17.155s  0:45.28 402.5%

my @res;

# Translation of: Perl with the pallette swapped, just because.
 
use Image::PNG::Portable;
 
my ($w, $h) = 800, 600;
my $out = Image::PNG::Portable.new: :width($w), :height($h);
 
my $maxIter = 255;
my $c = -0.7 + 0.27015i;
 
julia($out);
 
$out.write: 'run/julia-set-perl6.png';
 
sub julia ( $png ) {
    ^$w .race.map: -> $x {
        for ^$h -> $y {
            my $z = Complex.new(($x - $w / 2) / $w * 3, ($y - $h / 2) / $h * 2);
            my $i = $maxIter;
            while (abs($z) < 2 and --$i) {
                $z = $z*$z + $c;
            }
            $png.set: $x, $y, |hsv2rgb($i / $maxIter, 1, ?$i).reverse;
        }
    }
}
 
sub hsv2rgb ( $h, $s, $v ){ # inputs normalized 0-1
    my $c = $v * $s;
    my $x = $c * (1 - abs( (($h*6) % 2) - 1 ) );
    my $m = $v - $c;
    my ($r, $g, $b) = do given $h {
        when   0..^(1/6) { $c, $x, 0 }
        when 1/6..^(1/3) { $x, $c, 0 }
        when 1/3..^(1/2) { 0, $c, $x }
        when 1/2..^(2/3) { 0, $x, $c }
        when 2/3..^(5/6) { $x, 0, $c }
        when 5/6..1      { $c, 0, $x }
    }
    ( $r, $g, $b ).map: ((*+$m) * 255).Int
}
