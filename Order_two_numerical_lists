#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Order_two_numerical_lists
#c# 2016-01-22 <>RC
#m# MOAR: OK
#j#  JVM: OK

# This is already a built-in comparison operator.

srand 123456;

my @a = <1 2 4>;
my @b = <1 2 4>;
my @res.push: @a ~ " before " ~ @b ~ " = " ~ ~(@a before @b);

@a = <1 2 4>;
@b = <1 2>;
@res.push: @a ~ " before " ~ @b ~ " = " ~ ~(@a before @b);

@a = <1 2>;
@b = <1 2 4>;
@res.push: @a ~ " before " ~ @b ~ " = " ~ ~(@a before @b);

for 1..10 {
    my @a = flat (^100).roll((2..3).pick);
    my @b = flat @a.map: { Bool.pick ?? $_ !! (^100).roll((0..2).pick) }
    @res.push: @a ~ " before " ~ @b ~ " = " ~ ~(@a before @b);
}

.say for @res;

my $moar = qq:to/END/;
1 2 4 before 1 2 4 = False
1 2 4 before 1 2 = False
1 2 before 1 2 4 = True
11 40 before 11 49 75 = True
45 27 33 before 45 27 33 = False
65 63 56 before 63 56 = False
33 74 before 74 = True
41 22 before 41 43 52 = True
53 58 before 58 = True
84 97 before 84 79 29 = False
83 43 before 46 85 = False
34 9 before  = False
15 73 before 2 73 = False
END

my $moar-old = qq:to/END/;
1 2 4 before 1 2 4 = False
1 2 4 before 1 2 = False
1 2 before 1 2 4 = True
73 17 34 before 73 51 34 = True
49 82 before 49 82 = False
86 70 62 before 29 70 62 = False
29 48 before 10 57 48 = False
37 85 before 37 35 16 = False
18 42 82 before 48 42 82 = True
99 18 12 before 24 69 = False
27 26 before 91 82 = True
44 94 33 before 73 94 33 = True
95 98 before 33 98 = False
END

my $jvm = qq:to/END/;
1 2 4 before 1 2 4 = False
1 2 4 before 1 2 = False
1 2 before 1 2 4 = True
19 65 56 before 19 27 56 = False
83 8 5 before 83 = False
34 10 before 57 = True
22 24 50 before 73 88 = True
99 59 before 99 59 = False
2 47 71 before 2 39 48 71 = False
98 92 33 before 92 33 = False
55 22 77 before 22 77 = False
97 32 before 59 8 32 = False
93 50 before 93 = False
END

use Test;
if $*VM ~~ /jvm/ {
is @res.join("\n"), chomp $jvm;
} else {
is @res.join("\n"), chomp $moar;
}
