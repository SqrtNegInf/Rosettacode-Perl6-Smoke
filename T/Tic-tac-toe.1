#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Tic-tac-toe
#c# 2016-01-29 <>RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

# The computer plays a random game.
# Output is formatted in a similar way to that of the better python version.

my @board = 1..9;
my @winning-positions = [0..2], [3..5], [6..8], [0,3,6], [1,4,7], [2,5,8],
	[0,4,8], [6,4,2];

sub get-winner() {
	for @winning-positions {
		return (@board[$_][0], $_) if [eq] @board[$_];
	}
}

sub free-indexes() {
	@board.keys.grep: { @board[$_] eq any(1..9) }
}

sub ai-move() {
	given free-indexes.pick {
		@board[$_] = 'o';
		say "I go at: { $_ + 1 }\n";
	}
}

sub print-board() {
	say @board.map({ "$^a | $^b | $^c" }).join("\n--+---+--\n"), "\n";
}

sub human-move() {
	my $pos = prompt "Choose one of { (free-indexes ).join(",") }: ";
	#my $pos = prompt "Choose one of { (free-indexes >>+>> 1).join(",") }: ";
	if $pos eq any(free-indexes) {
	#if $pos eq any(free-indexes >>+>> 1) {
		@board[$pos - 1] = 'x';
	} else {
		say "Sorry, you want to put your 'x' where?";
		human-move();
	}
}

#ai-move(); print-board; human-move(); print-board; exit;

#for (&ai-move, &human-move) xx * {
for 1..9 {
    ai-move(); print-board;
    exit if not free-indexes();
    #exit if get-winner() or not free-indexes();
    human-move(); print-board;
    exit if not free-indexes();
    #exit if get-winner() or not free-indexes();
	#.();
} # until get-winner() or not free-indexes;

if get-winner() -> ($player, $across) {
	say "$player wins across [", ($across >>+>> 1).join(", "), "].";
    exit;
} else {
	say "How boring, a draw!";
}
