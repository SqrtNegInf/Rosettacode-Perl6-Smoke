#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/100_doors
#c# 2015-10-26 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# mutating .= must not be white-space separated from args

# unoptimized
my @doors = False xx 101;
(.=not for @doors[0, $_ ... 100]) for 1..100;

my $o0 = gather { take $_ if @doors[$_] for 1..100};

#say "Door $_ is ", <closed open>[ @doors[$_] ] for 1..100;

# optimized variations

#say "Door $_ is open" for map {$^n ** 2}, 1..10;
my $o1 = gather { take $_ for map {$^n ** 2}, 1..10};

#Here's a version using the cross meta-operator instead of a map:
say "Door $_ is open" for 1..10 X** 2;
my $o2 = gather { take $_ for 1..10 X** 2 };

#This one prints both opened and closed doors:
#say "Door $_ is ", <closed open>[.sqrt == .sqrt.floor] for 1..100;

my $ref = (1,4,9,16,25,36,49,64,81,100);

use Test;
plan 3;
is $o0, $ref, 'Yes';
is $o1, $ref, 'Again';
is $o2, $ref, 'Still';

