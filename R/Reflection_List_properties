#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Reflection/List_properties
#c# 2016-08-06 <RC
#m# MOAR: OK
#j#  JVM: OK

# You can get a list of an object's attributes (instance variables) using .^attributes, which is part of the Meta Object Protocol..
# Each is represented as an Attribute object that contains a bunch of info:

class Foo {
    has $!a = now;
    has Str $.b;
    has Int $.c is rw;
}

my $object = Foo.new: b => "Hello", c => 42;

my @res;
for $object.^attributes {
    say join ", ", .name, .readonly, .container.^name, .get_value($object);
    my $temp = join ", ", .name, .readonly, .container.^name, .get_value($object);
    $temp ~~ s/Instant.*$//;
    @res.push: $temp;
}

my $ref = q:to/END/;
$!a, True, Any, 
$!b, True, Str, Hello
$!c, False, Int, 42
END

use Test;
is @res.join("\n"), chomp $ref;

# Public attributes (in this case, $.b and $.c) are really just attributes for which the compiler also auto-generates a method of the same name. See Reflection/List_methods#Perl_6.

