#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Random_Latin_Squares
#c# 2019-06-09 <RC
#m# MOAR: OK
#j# JVM:  OK

srand 123456;

my @res;

sub latin-square { [[0],] };

sub random ( @ls, :$size = 5 ) {

    # Build
    for 1 ..^ $size -> $i {
        @ls[$i] = @ls[0].clone;
        @ls[$_].splice($_, 0, $i) for 0 .. $i;
    }

    # Shuffle
    @ls = @ls[^$size .pick(*)];
    my @cols = ^$size .pick(*);
    @ls[$_] = @ls[$_][@cols] for ^@ls;

    # Some random Latin glyphs
    my @symbols = ('A' .. 'Z').pick($size);

    @ls.deepmap: { $_ = @symbols[$_] };

}

sub display ( @array ) { @res.push: $_.fmt("%2s ") for |@array, '' }

# The Task

# Default size 5
display random latin-square;

# Specified size
display random :size($_), latin-square for 5, 3, 9;

# Or, if you'd prefer:
display random latin-square, :size($_) for 12, 2, 1;

.say for @res;

my $moar = q:to/END/;
 X   M   G   C   F 
 F   G   C   X   M 
 C   F   M   G   X 
 M   C   X   F   G 
 G   X   F   M   C 
   
 Z   E   K   I   S 
 I   S   E   K   Z 
 E   I   Z   S   K 
 K   Z   S   E   I 
 S   K   I   Z   E 
   
 V   B   Q 
 B   Q   V 
 Q   V   B 
   
 D   N   X   E   M   K   O   T   Z 
 N   Z   M   T   E   O   D   K   X 
 M   E   K   D   O   Z   X   N   T 
 X   M   T   O   K   N   Z   D   E 
 K   O   N   X   Z   E   T   M   D 
 Z   X   E   K   T   D   N   O   M 
 O   D   Z   M   X   T   K   E   N 
 T   K   D   Z   N   M   E   X   O 
 E   T   O   N   D   X   M   Z   K 
   
 K   J   T   W   I   G   Y   P   X   U   D   S 
 S   G   I   U   P   Y   T   J   K   D   X   W 
 T   W   X   P   K   U   D   S   Y   J   G   I 
 U   T   J   X   G   I   P   Y   W   K   S   D 
 J   X   W   Y   U   K   S   D   P   T   I   G 
 D   I   G   K   Y   P   J   T   U   S   W   X 
 P   D   S   G   W   X   K   U   I   Y   T   J 
 W   Y   P   D   J   T   I   G   S   X   K   U 
 Y   S   D   I   X   W   U   K   G   P   J   T 
 G   K   U   T   D   S   W   X   J   I   P   Y 
 X   P   Y   S   T   J   G   I   D   W   U   K 
 I   U   K   J   S   D   X   W   T   G   Y   P 
   
 Z   S 
 S   Z 
   
 K 
   
END

my $jvm = q:to/END/;
 G   L   O   D   C 
 L   C   G   O   D 
 D   O   C   L   G 
 O   G   D   C   L 
 C   D   L   G   O 
   
 A   V   E   B   Y 
 E   A   B   Y   V 
 Y   B   V   A   E 
 V   Y   A   E   B 
 B   E   Y   V   A 
   
 S   R   W 
 W   S   R 
 R   W   S 
   
 O   K   L   Q   Y   W   X   G   F 
 L   O   W   K   F   X   G   Y   Q 
 K   Q   O   F   G   L   W   X   Y 
 Y   G   F   X   L   Q   K   O   W 
 W   L   X   O   Q   G   Y   F   K 
 G   X   Y   W   O   F   Q   K   L 
 Q   F   K   Y   X   O   L   W   G 
 X   W   G   L   K   Y   F   Q   O 
 F   Y   Q   G   W   K   O   L   X 
   
 P   K   N   X   S   G   Q   U   O   E   C   I 
 E   Q   P   N   O   U   C   S   I   K   G   X 
 G   S   C   Q   P   X   O   N   E   U   I   K 
 I   N   O   S   C   K   P   Q   G   X   E   U 
 U   O   G   C   E   N   I   P   K   S   X   Q 
 X   P   I   O   G   Q   E   C   U   N   K   S 
 K   C   E   P   I   S   G   O   X   Q   U   N 
 Q   G   K   E   X   O   U   I   N   C   S   P 
 O   X   S   U   Q   E   N   K   C   I   P   G 
 C   U   Q   K   N   I   S   X   P   G   O   E 
 S   I   U   G   K   P   X   E   Q   O   N   C 
 N   E   X   I   U   C   K   G   S   P   Q   O 
   
 S   T 
 T   S 
   
 M 
   
END

use Test;
my $ref = $*VM ~~ /jvm/ ?? $jvm !! $moar;
is @res.join("\n"), chomp $ref;
