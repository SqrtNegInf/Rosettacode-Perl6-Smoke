#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Random_Latin_Squares
#c# 2019-06-09 <RC
#m# MOAR: OK
#j# JVM:  OK

srand 123456;

my @res;

sub latin-square { [[0],] };

sub random ( @ls, :$size = 5 ) {

    # Build
    for 1 ..^ $size -> $i {
        @ls[$i] = @ls[0].clone;
        @ls[$_].splice($_, 0, $i) for 0 .. $i;
    }

    # Shuffle
    @ls = @ls[^$size .pick(*)];
    my @cols = ^$size .pick(*);
    @ls[$_] = @ls[$_][@cols] for ^@ls;

    # Some random Latin glyphs
    my @symbols = ('A' .. 'Z').pick($size);

    @ls.deepmap: { $_ = @symbols[$_] };

}

sub display ( @array ) { @res.push: $_.fmt("%2s ") for |@array, '' }

# The Task

# Default size 5
display random latin-square;

# Specified size
display random :size($_), latin-square for 5, 3, 9;

# Or, if you'd prefer:
display random latin-square, :size($_) for 12, 2, 1;

.say for @res;

my $moar = q:to/END/;
 A   B   K   J   C 
 B   C   A   K   J 
 J   K   C   B   A 
 C   J   B   A   K 
 K   A   J   C   B 
   
 V   R   Y   T   K 
 Y   T   K   V   R 
 T   K   V   R   Y 
 K   V   R   Y   T 
 R   Y   T   K   V 
   
 P   I   C 
 I   C   P 
 C   P   I 
   
 J   D   I   X   W   N   V   Z   R 
 V   W   J   I   X   Z   R   D   N 
 N   I   R   V   J   W   Z   X   D 
 R   X   V   J   I   D   N   W   Z 
 Z   J   N   R   V   X   D   I   W 
 I   Z   X   W   D   R   J   N   V 
 X   N   W   D   Z   V   I   R   J 
 W   R   D   Z   N   J   X   V   I 
 D   V   Z   N   R   I   W   J   X 
   
 M   H   Q   O   B   C   G   E   D   I   S   W 
 Q   E   O   I   G   D   S   B   H   W   M   C 
 E   I   B   G   C   Q   D   W   O   S   H   M 
 O   B   I   W   S   H   M   G   E   C   Q   D 
 I   G   W   C   M   E   Q   S   B   D   O   H 
 B   W   G   S   D   O   H   C   I   M   E   Q 
 H   O   E   B   W   M   C   I   Q   G   D   S 
 W   S   C   D   Q   B   O   M   G   H   I   E 
 G   C   S   M   H   I   E   D   W   Q   B   O 
 C   M   D   H   O   G   I   Q   S   E   W   B 
 D   Q   H   E   I   S   W   O   M   B   C   G 
 S   D   M   Q   E   W   B   H   C   O   G   I 
   
 W   O 
 O   W 
   
 F 
   
END

my $jvm = q:to/END/;
 G   L   O   D   C 
 L   C   G   O   D 
 D   O   C   L   G 
 O   G   D   C   L 
 C   D   L   G   O 
   
 A   V   E   B   Y 
 E   A   B   Y   V 
 Y   B   V   A   E 
 V   Y   A   E   B 
 B   E   Y   V   A 
   
 S   R   W 
 W   S   R 
 R   W   S 
   
 O   K   L   Q   Y   W   X   G   F 
 L   O   W   K   F   X   G   Y   Q 
 K   Q   O   F   G   L   W   X   Y 
 Y   G   F   X   L   Q   K   O   W 
 W   L   X   O   Q   G   Y   F   K 
 G   X   Y   W   O   F   Q   K   L 
 Q   F   K   Y   X   O   L   W   G 
 X   W   G   L   K   Y   F   Q   O 
 F   Y   Q   G   W   K   O   L   X 
   
 P   K   N   X   S   G   Q   U   O   E   C   I 
 E   Q   P   N   O   U   C   S   I   K   G   X 
 G   S   C   Q   P   X   O   N   E   U   I   K 
 I   N   O   S   C   K   P   Q   G   X   E   U 
 U   O   G   C   E   N   I   P   K   S   X   Q 
 X   P   I   O   G   Q   E   C   U   N   K   S 
 K   C   E   P   I   S   G   O   X   Q   U   N 
 Q   G   K   E   X   O   U   I   N   C   S   P 
 O   X   S   U   Q   E   N   K   C   I   P   G 
 C   U   Q   K   N   I   S   X   P   G   O   E 
 S   I   U   G   K   P   X   E   Q   O   N   C 
 N   E   X   I   U   C   K   G   S   P   Q   O 
   
 S   T 
 T   S 
   
 M 
   
END

use Test;
my $ref = $*VM ~~ /jvm/ ?? $jvm !! $moar;
is @res.join("\n"), chomp $ref;
