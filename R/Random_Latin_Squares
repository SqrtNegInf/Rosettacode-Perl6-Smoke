#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Random_Latin_Squares
#c# 2019-06-09 <RC
#m# MOAR: OK
#j# JVM:  OK

srand 123456;

my @res;

sub latin-square { [[0],] };

sub random ( @ls, :$size = 5 ) {

    # Build
    for 1 ..^ $size -> $i {
        @ls[$i] = @ls[0].clone;
        @ls[$_].splice($_, 0, $i) for 0 .. $i;
    }

    # Shuffle
    @ls = @ls[^$size .pick(*)];
    my @cols = ^$size .pick(*);
    @ls[$_] = @ls[$_][@cols] for ^@ls;

    # Some random Latin glyphs
    my @symbols = ('A' .. 'Z').pick($size);

    @ls.deepmap: { $_ = @symbols[$_] };

}

sub display ( @array ) { @res.push: $_.fmt("%2s ") for |@array, '' }

# The Task

# Default size 5
display random latin-square;

# Specified size
display random :size($_), latin-square for 5, 3, 9;

# Or, if you'd prefer:
display random latin-square, :size($_) for 12, 2, 1;

.say for @res;

my $moar = q:to/END/;
 G   U   B   W   Q 
 Q   G   W   U   B 
 U   W   Q   B   G 
 B   Q   U   G   W 
 W   B   G   Q   U 
   
 X   W   E   J   O 
 E   X   J   O   W 
 O   J   W   X   E 
 J   E   O   W   X 
 W   O   X   E   J 
   
 O   P   C 
 P   C   O 
 C   O   P 
   
 P   G   S   D   B   T   R   H   Z 
 B   T   G   H   Z   S   D   R   P 
 T   D   R   B   S   H   P   Z   G 
 G   R   H   P   T   D   Z   B   S 
 H   B   P   S   R   Z   T   G   D 
 Z   S   T   R   P   G   H   D   B 
 D   P   Z   T   H   B   G   S   R 
 R   Z   B   G   D   P   S   T   H 
 S   H   D   Z   G   R   B   P   T 
   
 X   L   G   H   T   C   N   U   W   O   S   Y 
 T   W   S   U   O   H   X   Y   G   N   L   C 
 N   S   W   C   X   Y   O   H   L   T   G   U 
 W   Y   H   N   G   O   L   X   C   S   U   T 
 S   H   Y   T   L   X   G   O   U   W   C   N 
 Y   X   O   S   C   G   U   L   T   H   N   W 
 C   T   N   L   H   S   Y   W   O   U   X   G 
 H   O   X   W   U   L   C   G   N   Y   T   S 
 O   G   L   Y   N   U   T   C   S   X   W   H 
 L   U   C   O   W   T   S   N   Y   G   H   X 
 U   N   T   G   Y   W   H   S   X   C   O   L 
 G   C   U   X   S   N   W   T   H   L   Y   O 
   
 K   F 
 F   K 
   
 P 
   
END
   
my $jvm = q:to/END/;
 G   L   O   D   C 
 L   C   G   O   D 
 D   O   C   L   G 
 O   G   D   C   L 
 C   D   L   G   O 
   
 A   V   E   B   Y 
 E   A   B   Y   V 
 Y   B   V   A   E 
 V   Y   A   E   B 
 B   E   Y   V   A 
   
 S   R   W 
 W   S   R 
 R   W   S 
   
 O   K   L   Q   Y   W   X   G   F 
 L   O   W   K   F   X   G   Y   Q 
 K   Q   O   F   G   L   W   X   Y 
 Y   G   F   X   L   Q   K   O   W 
 W   L   X   O   Q   G   Y   F   K 
 G   X   Y   W   O   F   Q   K   L 
 Q   F   K   Y   X   O   L   W   G 
 X   W   G   L   K   Y   F   Q   O 
 F   Y   Q   G   W   K   O   L   X 
   
 P   K   N   X   S   G   Q   U   O   E   C   I 
 E   Q   P   N   O   U   C   S   I   K   G   X 
 G   S   C   Q   P   X   O   N   E   U   I   K 
 I   N   O   S   C   K   P   Q   G   X   E   U 
 U   O   G   C   E   N   I   P   K   S   X   Q 
 X   P   I   O   G   Q   E   C   U   N   K   S 
 K   C   E   P   I   S   G   O   X   Q   U   N 
 Q   G   K   E   X   O   U   I   N   C   S   P 
 O   X   S   U   Q   E   N   K   C   I   P   G 
 C   U   Q   K   N   I   S   X   P   G   O   E 
 S   I   U   G   K   P   X   E   Q   O   N   C 
 N   E   X   I   U   C   K   G   S   P   Q   O 
   
 S   T 
 T   S 
   
 M 
   
END

use Test;
my $ref = $*VM ~~ /jvm/ ?? $jvm !! $moar;
is @res.join("\n"), chomp $ref;
