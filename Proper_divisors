#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Proper_divisors
#c# 2015-10-30 <>RC
#m# MOAR: OK
#j#  JVM: OK

sub propdiv (\x) {
    my @l = (1 if x > 1), gather for 2 .. x.sqrt.floor -> \d {
        my \y = x div d;
        if y * d == x { take d; take y unless y == d }
    }
    gather @l.deepmap(*.take);
}

say "$_ ", propdiv($_) for 1..10;

my $max = 0;
my @candidates;
for 1..20000 {
    my @pd = propdiv($_);
    my $pd = @pd.elems;
    if $pd > $max {
        @candidates = ();
        $max = $pd;
    }
    push @candidates, $_ if $pd == $max;
}
say "max = $max, candidates = @candidates[]";

use Test;
is propdiv(1), '', 'for 1: nil';
is propdiv(2), '1', 'for 2: 1';
is propdiv(6), '1 2 3', 'for 6: 1 2 3';
is propdiv(9), '1 3', 'for 9: 1 3';
is propdiv(10), '1 2 5', 'for 10: 1 2 5';
is $max, 79, 'Max: 79';
is @candidates[], <15120 18480>, 'Candidates: 15120 18480';
