#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Julia_set
#c# 2016-03-25 <RC
#t# toodamnslow
#t# graphical
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: julia-set-perl6.png
#n# Error while compiling op nativecallinvoke, no registered operation handler

# Translation of: Perl with the pallette swapped, just because.
# Works with: Rakudo version 2016.03

BEGIN { die 'ecosystem...' if $*VM ~~ /jvm/; }  # wait for zef-j

use Image::PNG::Portable;

my ($w, $h) = (800, 600);

my $out = Image::PNG::Portable.new: :width($w), :height($h);

my $maxIter = 255;

my ($cX, $cY) = (-0.7, 0.27015);

julia($out);

$out.write: 'run/julia-set-perl6.png';

sub julia ( $png ) {
    for ^$w -> $x {
        for ^$h -> $y {
            my $zx = ($x - $w / 2) / $w * 3;
            my $zy = ($y - $h / 2) / $h * 2;
            my $i = $maxIter;
            while $zx² + $zy² < 4 and --$i {
                ($zy, $zx) = (2.0 * $zx * $zy + $cY, $zx² - $zy² + $cX);
            }
            $png.set( $x, $y, |hsv2rgb($i / $maxIter * 360, 1, $i > 1 ?? 1 !! 0) );
        }
    }
}

sub hsv2rgb ( $h, $s, $v ){
    my $c = $v * $s;
    my $x = $c * (1 - abs( (($h/60) % 2) - 1 ) );
    my $m = $v - $c;
    my ($r, $g, $b);
    given $h {
        when   0..^60  { ($r, $g, $b) = ($c, $x, 0) }
        when  60..^120 { ($r, $g, $b) = ($x, $c, 0) }
        when 120..^180 { ($r, $g, $b) = (0, $c, $x) }
        when 180..^240 { ($r, $g, $b) = (0, $x, $c) }
        when 240..^300 { ($r, $g, $b) = ($x, 0, $c) }
        when 300..^360 { ($r, $g, $b) = ($c, 0, $x) }
    }
    ( $r, $g, $b ) = map { (($_+$m) * 255).Int }, $r, $g, $b;
    return $b, $g, $r;
}
