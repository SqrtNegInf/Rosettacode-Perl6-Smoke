#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Amicable_pairs
#c# 2015-10-30 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2019-05-25 not a big whoop, but easy way to double speed: (but safe/robust?)
#n# this: 20.155u 1.070s 0:06.17 343.9%
#n# prev: 12.765u 0.220s 0:12.53 103.5%

sub propdivsum (\x) {
    my @l = x > 1, gather for 2 .. x.sqrt.floor -> \d {
        my \y = x div d;
        if y * d == x { take d; take y unless y == d }
    }
    [+] gather @l.deepmap(*.take);
}

my %H;
(1..20000).race.map: -> $i {
    my $j = propdivsum($i);
    if $j > $i and $i == propdivsum($j) {
        say "$i $j";
        %H{$i} = $j;
    }
}

my %ref = (
220 => 284,
1184 => 1210,
2620 => 2924,
5020 => 5564,
6232 => 6368,
10744 => 10856,
12285 => 14595,
17296 => 18416,
);

use Test;
ok %H eqv %ref;
