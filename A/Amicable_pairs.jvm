#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Amicable_pairs
#c# 2015-10-30 <RC, 2019-05-26 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# both the concurrency and improved sum calculation contribute to boost the speed
#n# http://blogs.perl.org/users/damian_conway/2019/08/with-friends-like-these.html

sub propdivsum (\x) {
    my @l = 1 if x > 1;
    (2 .. x.sqrt.floor).map: -> \d {
        unless x % d { @l.push: d; my \y = x div d; @l.push: y if y != d }
    }
    sum @l
}

my %H;
for 1..20000 -> $i {
    my $j = propdivsum($i);
    if $j > $i and $i == propdivsum($j) {
        say "$i $j";
        %H{$i} = $j;
    }
}

my %ref = (
220 => 284,
1184 => 1210,
2620 => 2924,
5020 => 5564,
6232 => 6368,
10744 => 10856,
12285 => 14595,
17296 => 18416,
);

use Test;
ok %H eqv %ref;
