#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Anti-primes_Plus
#c# 2019-04-09 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# not tracking further changes

srand 123456;

my @res;

sub div-count (\x) {
    return 2 if x.is-prime;
    +flat (1 .. x.sqrt.floor).map: -> \d {
        unless x % d { my \y = x div d; y == d ?? y !! (y, d) }
    }
}
 
@res.push: 'First 15 terms of OEIS: A005179';
@res.push: (1..15).map: -> $n { first { $n == .&div-count }, 1..Inf };
 
my $m = 1;
@res.push: "\nFirst 15 terms of OEIS: A69654";
@res.push: (1..15).map: -> $n { my $r = $m = first { $n == .&div-count }, $m..Inf };

@res.push: "\nTechnically correct is the best kind of correct:";
my $antipp = (1..5000).race.classify: { .&div-count };
@res.push: (1..15).map: { $antipp{$_}.pick };

@res.push: "\nNth occurrence of an integer with n divisors:";
@res.push: (1..10).hyper(:1batch).map: -> $n {
    my $i = 0;
    my $iterator = $n %% 2 ?? (1..*) !! (1..*).map: *Â²;
    $iterator.first: {
        next unless $n == .&div-count;
        next unless ++$i == $n;
        $_
    }
};

.say for @res;

my $ref = q:to/END/;
First 15 terms of OEIS: A005179
1 2 4 6 16 12 64 24 36 48 1024 60 4096 192 144

First 15 terms of OEIS: A69654
1 2 4 6 16 18 64 66 100 112 1024 1035 4096 4288 4624

Technically correct is the best kind of correct:
1 919 1681 3047 625 548 729 3286 36 3376 1024 340 4096 4672 2704

Nth occurrence of an integer with n divisors:
1 3 25 14 14641 44 24137569 70 1089 405
END

use Test;
is @res.join("\n"), chomp $ref;
