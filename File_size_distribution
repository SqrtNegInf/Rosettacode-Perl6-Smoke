#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/File_size_distribution
#c# 2017-05-31 <RC, 2018-05-17 <RC
#m# MOAR: OK
#j#  JVM: OK

# By default, process the current and all readable sub-directories, or, pass in a directory path at the command line.

sub MAIN($dir = 'bench/2018-01-01-m') {
    my @res;
    sub log10 (Int $s) { $s ?? $s.log(10).Int !! 0 }
    my %fsize;
    my @dirs = $dir.IO;
    while @dirs {
        for @dirs.pop.dir -> $path {
            %fsize{$path.s.&log10}++ if $path.f;
            @dirs.push: $path if $path.d and $path.r
        }
    }
    my $max = %fsize.values.max;
    my $bar-size = 80;
    @res.push: "File size distribution in bytes for directory: $dir\n";
    @res.push: sprintf( "# Files @     0b %8s: ", %fsize{0} // 0 ) ~
        histogram( $max, %fsize{0} // 0, $bar-size );
    for 1 .. %fsize.keys.max {
          @res.push: sprintf( "# Files @ %5sb %8s: ", "10e{$_-1}", %fsize{$_} // 0 )~
              histogram( $max, %fsize{$_} // 0, $bar-size )
    }
    @res.push: %fsize.values.sum~ ' total files.';
 
sub histogram ($max, $value, $width = 60) {
    my @blocks = <| ▏ ▎ ▍ ▌ ▋ ▊ ▉ █>;
    my $scaled = ($value * $width / $max).Int;
    my ($end, $bar) = $scaled.polymod(8);
    (@blocks[8] x $bar * 8) ~ (@blocks[$end] if $end); # ~ "\n"
}

.say for @res;

my $ref = qq:to/END/;
File size distribution in bytes for directory: bench/2018-01-01-m

# Files @     0b        0: 
# Files @  10e0b      902: ████████████████████████████████████████████████████████████████████████████████
# Files @  10e1b      477: ████████████████████████████████████████▎
# Files @  10e2b       53: ▌
# Files @  10e3b        5: 
# Files @  10e4b        1: 
1438 total files.
END

use Test;
is @res.join("\n"), chomp $ref;
}
