#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Canonicalize_CIDR
#c# 2020-07-09 <RC, 2020-07-15 <RC
#m# MOAR: OK
#j# JVM:  OK

my @res;

# canonicalize a IP4 CIDR block
sub CIDR-IP4-canonicalize ($address) {
  constant @mask = 24, 16, 8, 0;

  # dotted-decimal / subnet size
  my ($dotted, $size) = |$address.split('/'), 32;

  # get IP as binary address
  my $binary = sum $dotted.comb(/\d+/) Z+< @mask;

  # mask off subnet
  $binary +&= (2 ** $size - 1) +< (32 - $size);

  # Return dotted-decimal notation
  (@mask.map($binary +> * +& 0xFF).join('.'), $size)
}

my @tests = <
  87.70.141.1/22
  36.18.154.103/12
  62.62.197.11/29
  67.137.119.181/4
  161.214.74.21/24
  184.232.176.184/18
  100.68.0.18/18
  10.4.30.77/30
  10.207.219.251/32
  10.207.219.251
  110.200.21/4
  10.11.12.13/8
  10.../8
>;

@res.push: sprintf "CIDR: %18s  Routing prefix: %s/%s", $_, |.&CIDR-IP4-canonicalize
  for @*ARGS || @tests;

.say for @res;

my $ref = q:to/END/;
CIDR:     87.70.141.1/22  Routing prefix: 87.70.140.0/22
CIDR:   36.18.154.103/12  Routing prefix: 36.16.0.0/12
CIDR:    62.62.197.11/29  Routing prefix: 62.62.197.8/29
CIDR:   67.137.119.181/4  Routing prefix: 64.0.0.0/4
CIDR:   161.214.74.21/24  Routing prefix: 161.214.74.0/24
CIDR: 184.232.176.184/18  Routing prefix: 184.232.128.0/18
CIDR:     100.68.0.18/18  Routing prefix: 100.68.0.0/18
CIDR:      10.4.30.77/30  Routing prefix: 10.4.30.76/30
CIDR:  10.207.219.251/32  Routing prefix: 10.207.219.251/32
CIDR:     10.207.219.251  Routing prefix: 10.207.219.251/32
CIDR:       110.200.21/4  Routing prefix: 96.0.0.0/4
CIDR:      10.11.12.13/8  Routing prefix: 10.0.0.0/8
CIDR:            10.../8  Routing prefix: 10.0.0.0/8
END

use Test;
is @res.join("\n"), chomp $ref;
