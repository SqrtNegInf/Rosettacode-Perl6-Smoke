#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Catamorphism
#c# 2016-01-07 <RC, 2019-05-16 >RC
#m# MOAR: OK
#j#  JVM: OK

# Works with: Rakudo version 2015.12
# Any associative infix operator, either built-in or user-defined, may be turned into a reduce operator by putting it into square brackets (known as "the reduce metaoperator") and using it as a list operator. The operations will work left-to-right or right-to-left automatically depending on the natural associativity of the base operator.

my @res;

my @list = 1..10;
@res.push: [+] @list;
@res.push: [*] @list;
@res.push: [~] @list;
@res.push:  min  @list;
@res.push:  max  @list;
@res.push: [lcm] @list;

# In addition to the reduce metaoperator, a general higher-order function, reduce, can apply any appropriate function. Reproducing the above in this form, using the function names of those operators, we have:

@res.push: reduce &infix:<+>, @list;
@res.push: reduce &infix:<*>, @list;
@res.push: reduce &infix:<~>, @list;
@res.push: reduce &infix:<min>, @list;
@res.push: reduce &infix:<max>, @list;
@res.push: reduce &infix:<lcm>, @list;

.say for @res;

my $ref = qq:to/END/;
55
3628800
12345678910
1
10
2520
55
3628800
12345678910
1
10
2520
END

use Test;
is @res.join("\n"), chomp $ref;
