#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Combinations_with_repetitions/Square_Digit_Chain
#c# 2018-12-21 <RC, 2018-12-23 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# compare with 'Iterated_digits_squaring-1' default trait on variable vs. use of 'quietly' to surpress warnings
#n# minor changes not on RC

my @res;

sub endsWithOne($n --> Bool) {
   my $digit;
   my $sum = 0;
   my $nn  = $n;
   loop {
      while ($nn > 0) {
         $digit = $nn % 10;
         $sum  += $digit²;
         $nn    = $nn div 10;
      }
      return True  if $sum == 1;
      return False if $sum == 89;
      $nn = $sum;
      $sum = 0;
   }
}

#quietly { # DH don't need because 'default' is used

my @ks = (7, 8, 11, 14, 17);

for @ks -> $k {
   my @sums is default(0) = 1,0;
   my $s;
   for (1 .. $k) -> $n {
      for ($n×81 ... 1) -> $i {
         for (1 .. 9) -> $j {
            $s = $j²;
            last if $s > $i; # DH change
            @sums[$i] += @sums[$i-$s];
         }
      }
   }
   my $count1 = 0;
   $count1 += @sums[$_] if endsWithOne($_) for 1 .. $k×81; # DH change
   my $limit = 10**$k - 1;
   @res.push: "For k = $k in the range 1 to $limit";
   @res.push: "$count1 numbers produce 1 and {$limit-$count1} numbers produce 89";
}

#} # to be continued

.say for @res;

my $ref = q:to/END/;
For k = 7 in the range 1 to 9999999
1418853 numbers produce 1 and 8581146 numbers produce 89
For k = 8 in the range 1 to 99999999
14255666 numbers produce 1 and 85744333 numbers produce 89
For k = 11 in the range 1 to 99999999999
15091199356 numbers produce 1 and 84908800643 numbers produce 89
For k = 14 in the range 1 to 99999999999999
13770853279684 numbers produce 1 and 86229146720315 numbers produce 89
For k = 17 in the range 1 to 99999999999999999
12024696404768024 numbers produce 1 and 87975303595231975 numbers produce 89
END

use Test;
is @res.join("\n"), chomp $ref;
