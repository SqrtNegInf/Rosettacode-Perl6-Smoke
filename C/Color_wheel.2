#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Color_wheel
#c# 2016-08-22 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: color-wheel-perl6.png

use Image::PNG::Portable;

my ($w, $h) = 300, 300;

my $out = Image::PNG::Portable.new: :width($w), :height($h);

my $center = $w/2 + $h/2*i;

color-wheel($out);

$out.write: 'color-wheel-perl6.png';

sub color-wheel ( $png ) {
    for ^$w -> $x {
        for ^$h -> $y {
            my $point = $center - ($x + $y*i);
            my $mag = 2 * $point.abs;
            $png.set: $x, $y, |hsv2rgb( $point.&c2p, $mag / $w, so $mag < $w );
        }
    }
}

sub c2p ($xy) { # complex to polar angle scaled 0 to 2pi
    ( pi + atan2($xy.re, $xy.im) ) / (2*pi)
}

sub hsv2rgb ( $h, $s, $v ){ # inputs normalized 0-1
    my $c = $v * $s;
    my $x = $c * (1 - abs( (($h*6) % 2) - 1 ) );
    my $m = $v - $c;
    my ($r, $g, $b) = do given $h {
        when   0..^(1/6) { $c, $x, 0 }
        when 1/6..^(1/3) { $x, $c, 0 }
        when 1/3..^(1/2) { 0, $c, $x }
        when 1/2..^(2/3) { 0, $x, $c }
        when 2/3..^(5/6) { $x, 0, $c }
        when 5/6..1      { $c, 0, $x }
    }
    ( $r, $g, $b ) = map { (($_+$m) * 255).Int }, $r, $g, $b;
}
