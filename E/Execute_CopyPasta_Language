#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Execute_CopyPasta_Language
#c# 2019-11-22 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# the RC version doesn't have the unnecessary frippery

my @res;

sub CopyPasta-chew ($code) {
    my @code = $code.split("\n")>>.trim.grep: *.so;
    return "Program never ends!" unless grep { $_ eq 'Pasta!' }, @code;
    my @code-orig = @code;

    my @cb;
    while (my $instruction = @code.shift) {
        given $instruction {
            when 'Copy'      { @cb.push: @code.shift }
            when 'CopyFile'  { @cb.push: @code[0] eq 'TheF*ckingCode' ?? @code-orig !! slurp @code[0]; @code.shift }
            when 'Duplicate' { @cb = (flat @cb) xx @code.shift }
            when 'Pasta!'    { return @cb }
            default          { return "Does not compute: $instruction" }
        }
    }
}

sub CopyPasta-PC ($code) {
    my @code = $code.split("\n")>>.trim.grep: *.so;
    return "Program never ends!" unless grep { $_ eq 'Pasta!' }, @code;

    my @cb;
    my $PC = 0;
    loop {
        given @code[$PC] {
            when 'Copy'      {        @cb.push: @code[++$PC] }
            when 'CopyFile'  { $PC++; @cb.push: @code[$PC] eq 'TheF*ckingCode' ?? @code !! slurp @code[$PC] }
            when 'Duplicate' {        @cb = (flat @cb) xx @code[++$PC] }
            when 'Pasta!'    { return @cb }
            default          { return "Does not compute: @code[$PC]" }
        }
        $PC++;
    }
}

#`{{ works fine, but why bother...
(@res.push: $_ for CopyPasta-chew(slurp $_);  @res.push: '--'; 
 @res.push: $_ for CopyPasta-PC(slurp $_);    @res.push: ''  )
for 
    <prog1.cp prog2.cp prog3.cp prog4.cp prog5.cp>;
}}

spurt 'pasta.txt', "I'm the pasta.txt file.";

# at run-time, randomly choose which routine to call
( ('@res.push: $_ for .' ~ <&CopyPasta-chew &CopyPasta-PC>[(^2).roll]).EVAL; @res.push: '')
for 
    "Copy \nRosetta Code\n\tDuplicate\n2\n\nPasta!\nLa Vista",
    "CopyFile\npasta.txt\nDuplicate\n1\nPasta!",
    "Copy\nInvalid\n Duplicate\n1\n\nGoto\n3\nPasta!",
    "CopyFile\nTheF*ckingCode\nDuplicate\n2\nPasta!",
    "Copy\nRosetta Code\nDuplicate\n2\n\nPasta";

unlink 'pasta.txt';

.say for @res;

my $ref = q:to/END/;
Rosetta Code
Rosetta Code

I'm the pasta.txt file.

Does not compute: Goto

CopyFile TheF*ckingCode Duplicate 2 Pasta!
CopyFile TheF*ckingCode Duplicate 2 Pasta!

Program never ends!
END

use Test;
is @res.join("\n"), $ref;
