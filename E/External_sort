#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/External_sort
#t# inprogress
#c# 2019-11-xx >RC
#p# OK
#n# ?? note dual use of 'mysort', via direct call, and passed as a sorting routine for native 'sort' function

my $result;

use File::Temp;

my @data = qw<432 345 3.21 543 -987 45.6 678 123 765 567 876 654 .789 2/34>;

my $max = 4; # records per merge file
my (@chunk,@files);

# we're going to pretend that this is input from stdin...
for (@data) {
    @chunk.push: $_;
    @files.push: store(@chunk) and @chunk = () if @chunk.elems == $max;
}

@files.push: store(@chunk) if @chunk;

sub store (@values) {
    my ($filename,$filehandle) = tempfile(:tempdir('./tmp'), :prefix('external-sort.'));
    $filehandle.say: join "\n", @values.sort: +*;
    $filehandle.close;
    return $filename;
}

sub merge_streams ( @streams ) {
    my @s = @streams.map({ hash( STREAM => $_, HEAD => .get ) })\
                    .grep({ .<HEAD>.defined });

    return gather while @s {
        my $h = @s.min: *.<HEAD>;
        take $h<HEAD>;
        $h<HEAD> := $h<STREAM>.get
            orelse @s .= grep( { $_ !=== $h } );
    }
}

my @res =  merge_streams([ @filesÂ».&open ]);
.say for @res; 
exit;

my $ref = qq:to/END/;
-987
2/34
.789
3.21
45.6
123
234
345
432
543
567
654
678
765
876
END

use Test;
is @res.join("\n"), chomp $ref;
