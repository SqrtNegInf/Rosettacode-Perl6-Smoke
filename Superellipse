#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Superellipse
#c# 2015-11-02 <>RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: superellipse.svg

# Generate an svg image to STDOUT. Redirect into a file to capture it.

my \a = 200;
my \b = 200;
my \n = 2.5;

# y in terms of x
sub y ($x) { sprintf "%d", b * (1 - ($x / a).abs ** n ) ** (1/n) }

# find point pairs for one quadrant
my @q = flat map { $_,.&y }, (0, 5 ... 200);

# Generate an SVG image
my $out = open('run/superellipse.svg', :w);
$out.print: [~] qq|<svg height="{b*2}" width="{a*2}" xmlns="http://www.w3.org/2000/svg">\n|, # DH change
  pline( flat @q ),
  pline( flat @q «*» ( 1,-1) ), # flip and mirror
  pline( flat @q «*» (-1,-1) ), # for the other 
  pline( flat @q «*» (-1, 1) ), # three quadrants
  '</svg>'
;

sub pline (@q) {
  qq|<polyline points="{ join ' ', @q }"
  style="fill:none;stroke:black;stroke-width:3"
  transform="translate({a}, {b})" />\n|
}
