#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Write_float_arrays_to_a_text_file
#c# 2015-12-12 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: sqrt.dat

#Translation of: Perl
sub writedat ( $filename, @x, @y, $x_precision = 3, $y_precision = 5 ) {
    my $fh = open $filename, :w;

    for @x Z @y -> $x, $y {
        $fh.say: "%15.6f\t%15.6f\n", $x_precision, $x, $y_precision, $y;
        #$fh.sprintf: "%.*g\t%.*g\n", $x_precision, $x, $y_precision, $y;
    }

    $fh.close;
}

my @xx = 1, 2, 3, 1e11;
my @y = @xx.map({.sqrt});

writedat( 'run/sqrt.dat', @xx, @y );


# 1	1
# 2	1.4142
# 3	1.7321
# 1e+11	3.1623e+05

#In Perl 6 Real::base can be used to convert to Str with arbitrary precision and any base you like. Using the hyper-operator >>. let us strip loops, many temporary variables and is a candidate for autothreading.

sub writefloat($filename, @x, @y, :$x-precision = 3, :$y-precision = 5) {
    constant TAB = "\t" xx *;
    constant NL = "\n" xx *;

    open($filename, :w).print(
        flat @x>>.base(10, $x-precision) Z TAB Z @y>>.base(10, $y-precision) Z NL);
}
my @x = 1, 2, 3, 1e11;
writefloat('run/sqrt.dat', @x, @x>>.sqrt, :y-precision(20));

#File contents
#1.000	1.00000000000000000000
#2.000	1.41421356237309510107
#3.000	1.73205080756887719318
#100000000000.000	316227.76601683790795505047
