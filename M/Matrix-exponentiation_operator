#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Matrix-exponentiation_operator
#c# 2016-02-16 <RC, 2017-03-12 <RC, 2020-07-20 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 'flatmap' deprecated

subset SqMat of Array where { .elems == all(.[]».elems) }

multi infix:<×>(SqMat $a, SqMat $b) {[
    for ^$a -> $r {[
        for ^$b[0] -> $c {
            [+] ($a[$r][] Z× $b[].map: *[$c])
        }
    ]}
]}

multi infix:<**> (SqMat $m, Int $n is copy where { $_ >= 0 }) {
    my $tmp = $m;
    my $out = [for ^$m -> $i { [ for ^$m -> $j { +($i == $j) } ] } ];
    loop {
	$out = $out × $tmp if $n +& 1;
	last unless $n +>= 1;
	$tmp = $tmp × $tmp;
    }

    $out;
}

my @res;

multi show (SqMat $m) {
    my $size = $m.map( *.list».chars ).flat.max;
    say .fmt("%{$size}s", ' ') for $m.list;

    @res.push: "$_\n" for @$m».fmt("%{$size}s");
}

my @m = 
    [1, 2, 0],
	[0, 3, 1],
	[1, 0, 0];

for 0 .. 10 -> $order {
    say "### Order $order";
    show @m ** $order;
}

my $ref = qq:to/END/;
 13801 102408  31322
  15661 116209  35543
   4221  31322   9580
END

@res = [];
show @m ** 10;

use Test;
is @res, $ref;
