#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Multiple_distinct_objects
#c# 2016-02-18 <RC
#m# MOAR: OK
#j#  JVM: OK

# Unlike in Perl 5, the list repetition operator evaluates the left argument thunk each time, so
# produces $n distinct objects.

my $n = 5;
my @a = Num.new xx $n;
@a[$_] = -1 * $_ for ^@a.elems;

class ABC {
    has Int $.a is rw = 0;
    has Str $.b is rw = 'Z';

    method set-a ( $num ) {
        self.a = $num
    }

    method set-b ( $text ) {
        self.b = $text
    }
}

$n = 3;
my @b = ABC.new() xx $n;
@b[0].set-a(47);
@b[1].set-b('A');
@b[2].set-a(42);
@b[2].set-b('Q');

use Test;
is @a.raku, '[0, -1, -2, -3, -4]';
is @b.raku, '[ABC.new(a => 47, b => "Z"), ABC.new(a => 0, b => "A"), ABC.new(a => 42, b => "Q")]';

