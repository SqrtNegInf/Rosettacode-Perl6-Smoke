#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Monte_Carlo_methods
#c# 2016-03-31 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# different results when initiated from 1) command line 2) shell script 3) shell script via cron

srand 123456;

my @random_distances = ([+] rand**2 xx 2) xx *;

sub approximate_pi(Int $n) {
    4 × @random_distances[^$n].grep(* < 1) / $n
}

say "Monte-Carlo π approximation:";
my @res.push: "$_ iterations:  " ~ approximate_pi $_
    for 100, 1_000, 10_000;

my @pi = ([\+] 4 × (1 > [+] rand**2 xx 2) xx *) Z/ 1 .. *;
@res.push: @pi[10, 1000, 10_000];

.say for @res;

my $moar-cronjob = qq:to/END/;
100 iterations:  3.16
1000 iterations:  3.124
10000 iterations:  3.1276
3.272727 3.116883 3.131287
END

my $moar-terminal = qq:to/END/;
100 iterations:  3.16
1000 iterations:  3.136
10000 iterations:  3.1276
2.909091 3.108891 3.130487
END

my $jvm = qq:to/END/;
100 iterations:  3.12
1000 iterations:  3.152
10000 iterations:  3.1256
3.272727 3.204795 3.144086
END

use Test;
#is @res.join("\n"), chomp $*VM ~~ /jvm/ ?? $jvm !! $moar;
is @res.join("\n"), chomp $*VM ~~ /jvm/ ?? $jvm !! $*IN.t ?? $moar-terminal !! $moar-cronjob;
