#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Metronome
#c# 2016-05-08 <RC
#m# MOAR: OK
#j#  JVM: OK

#This code only uses textual output, but any noise-generating commands may be substituted; as long as they are executed synchronously, and do not run longer than the specified duration, the timing loop will compensate, since the sequence operator is determining a list of absolute times for each sleep to target.

my $result;

sub MAIN ($beats-per-minute = 72, $beats-per-bar = 4) {
    my $duration = 60 / $beats-per-minute;
    my $base-time = now + $duration;
    my $i;

    for $base-time, $base-time + $duration ... * -> $next-time {
        if $i++ %% $beats-per-bar {
            $result ~= "\nTICK";
        }
        else {
            $result ~=  " tick";
        }
        last if $i == 16;
        sleep $next-time - now;
    }

say $result; 

my $ref = qq:to/END/;

TICK tick tick tick
TICK tick tick tick
TICK tick tick tick
TICK tick tick tick
END

use Test;
is $result, chomp $ref;
}
