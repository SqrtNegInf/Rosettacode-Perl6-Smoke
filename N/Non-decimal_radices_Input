#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Non-decimal_radices/Input
#c# 2015-10-26 <RC
#m# MOAR: OK
#j#  JVM: OK

#By defaultall strings of digits are parsed as base 10 numbers, including those with a leading zero. Numbers with a prefix 0b, 0o, 0d or 0x are parsed as binary, octal, decimal or hexadecimal respectively., 'Yup, all strings of digits are parsed as base 10 numbers, including those with a leading zero. Numbers with a prefix 0b, 0o, 0d or 0x are parsed as binary, octal, decimal or hexadecimal respectively.';

is (0b11011), 27, 'Yup, 27';
is (0o11011), 4617, 'Yup, 4617';
is (0d11011), 11011, 'Yup, 11011';
is (0x11011), 69649, 'Yup, 69649';

#Additionallythere are built-in adverbial prefix operators to parse strings of "digits" of radix 2 through radix 36 into decimal. They will fail with a runtime error if they are fed a digit that is not valid in that radix., 'Yup, there are built-in adverbial prefix operators to parse strings of "digits" of radix 2 through radix 36 into decimal. They will fail with a runtime error if they are fed a digit that is not valid in that radix.';

my @res;
my $n = '11011';
#is (:2($n)),  27, 'Yup, 27';
#is (:3($n)),  112, 'Yup, 112';
#etc.

@res.push: +":$_\<$n>" for 2..36;
say @resÂ».fmt("%9d").rotor(9, :partial).join: "\n";

my $ref = qq:to/END/;
27
112
325
756
1519
2752
4617
7300
11011
15984
22477
30772
41175
54016
69649
88452
110827
137200
168021
203764
244927
292032
345625
406276
474579
551152
636637
731700
837031
953344
1081377
1221892
1375675
1543536
1726309
END

use Test;
is @res.join("\n"), chomp $ref;
